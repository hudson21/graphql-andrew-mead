==================================== Reasons to use GraphQL ==================================================

1. GraphQL is fast
2. graphQLis flexible
3. graphQL is easy to use at simple to maintain

==================================== Visual Studio Code Plugins =============================================
Babel ES6/ES7
Beautify
Docker 
Duplicate action
GraphQL for VSCode
npm 
npm intellisense
Sublime Text Keymap
Word Count 

==================================== What is GraphQL ========================================================
graphql-demo.mead.io

Three Main Operations in GraphQL:
    1. Queries (getting data)
    2. Mutations (changing actions like update, deete and insert)
    3. Subscriptions (watchers)

First Query:

query {
    hello --> first query
    courseInstructor --> second query
    course --> Third Query
}

==================================== 8. Nestes GraphQL Queries ========================================================
query {
    me {
        id 
        name
        email
    }
}

query {
    users { --> this returns an array of users
        name
    }
}

query {
    posts {
      id
      title
      body
      published
      author {
        id
        name
        email
      }
      comments {
        id
        text
        post {
          id
          title
        }
      }
    }
}

==================================== 9. Setting up Babel ========================================================
Babeljs.io
cmder.net --> To use the same commands as Mac or Linux OS 

Toggle Terminal --> Look for it in the VS Code Command Line

npm install babel-cli@6.26.0 babel-preset-env@1.7.0 

==================================== 10. Import Export ========================================================

==================================== 11. Creating your own graphQL API ========================================
facebook.github.io/graphql

npm install graphql-yoga@1.14.10

https://github.com/prisma/graphql-yoga

graphql-toga will set the server in localhost:4000

==================================== 12. GraphQL Scalar Types ========================================
Five Scalar Types:
    1. String
    2. Boolean
    3. Int
    4. Float
    5. ID

==================================== 13. Live Reload for GraphQL ========================================
npm install nodemon --save-dev


==================================== 15. Operation Arguments ========================================
GraphQL Arguments: parent, args, ctx, info

greeting(parent, args, ctx, info) {
    if (args.name && args.position) {
        return `Hello ${args.name}!. You are my favorite ${args.position}`
    } else {
        return 'Hello!'
    }
},

add(parent, args, ctx, info) {
    return args.a + args.b
},


users {
    id
    name
    email
    age
    posts {
      id
      title
      body
      published
    }
  }

posts {
    id
    title
    body
    published
    author {
      id
      name
      email
      age
    }
  }

